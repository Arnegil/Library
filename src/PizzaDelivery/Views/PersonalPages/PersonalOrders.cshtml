@using PizzaDelivery.Extensions
@using PizzaDelivery.Services.Extensions
@using PizzaDelivery.ViewModel.ViewModels.Ordering
@model PizzaDelivery.ViewModel.ViewModels.PersonalPages.Operator.PersonalOrdersVM
@{
    ViewData["Title"] = "OrderHistory";
}

<a class="btn btn-primary" href="@Url.Action("NewOrdersPage", "PersonPage")">Новые заказы</a>
<a class="btn btn-primary" href="@Url.Action("PersonalOrdersPage", "PersonPage")">Обработанные заказов</a>

<h2>Обработанные заказов</h2>


@foreach (OrderVM order in Model.OrderList)
{
    <div class="order_item">
        <div class="sum_shopping_cart">
            <span class="sum_shopping_cart_title">
                @Html.DisplayNameFor(x => order.Number):
            </span>
            <span>
                @Html.DisplayFor(x => order.Number)
            </span>
            <span class="sum_shopping_cart_title">
                @order.OrderState.GetDescription()
            </span>
        </div>
        <table class="order_element">
            <tbody>
            <tr>
                <td>
                    <div>
                        <table class="shopping_cart_grid">
                            @foreach (OrderPositionVM position in order.ShoppingCart.Products)
                            {
                                <tr class="shopping_cart_item">
                                    <td>
                                        <div class="name">
                                            <span>@Html.DisplayFor(x => position.Pizza.Name)</span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="cost">
                                            <span>@Html.DisplayFor(x => position.Pizza.Cost) ₽</span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="count">
                                            @Html.DisplayFor(x => position.Count)
                                        </div>
                                    </td>
                                    <td>
                                        <div class="sum">
                                            <span>@Html.DisplayFor(x => position.Sum) ₽</span>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </td>
                <td>
                    <div class="comment">
                        <div>
                            <span>@Html.DisplayNameFor(x => order.PaymentInfo.PaymentType): </span>
                            <span>@order.PaymentInfo.PaymentType.GetDescription()</span>
                        </div>
                        <div>
                            <span>@Html.DisplayNameFor(x => order.DeliveryInfo.ClientName): </span>
                            <span>@Html.DisplayFor(x => order.DeliveryInfo.ClientName)</span>
                        </div>
                        <div>
                            <span>@Html.DisplayNameFor(x => order.DeliveryInfo.ClientPhoneNumber): </span>
                            <span>@Html.DisplayFor(x => order.DeliveryInfo.ClientPhoneNumber)</span>
                        </div>
                        @if (!order.DeliveryInfo.CommentToOperator.IsNullOrEmpty())
                        {
                            <div>
                                <span>Комментарий: </span>
                                <span>@Html.DisplayFor(x => order.DeliveryInfo.CommentToOperator)</span>
                            </div>
                        }
                    </div>
                </td>
            </tr>
            </tbody>
        </table>
        <div class="sum_shopping_cart">
            <span class="sum_shopping_cart_title">
                @Html.DisplayNameFor(x => order.ShoppingCart.SumOrderPrice):
            </span>
            <span>
                @Html.DisplayFor(x => order.ShoppingCart.SumOrderPrice) ₽
            </span>
        @if (order.PaymentInfo.PayByBonuses > 0)
        {
            <span class="sum_shopping_cart_title">
                В том числе бонусов на:
            </span>
            <span>
                @Html.DisplayFor(x => order.PaymentInfo.PayByBonuses) ₽
            </span>
        }
        </div>
    </div>
 }
